name: rdp with mehraz

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP yesyesyesyes
        run: |
          # Enable Remote Desktop and disable Network Level Authentication (if needed)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          # Remove existing firewall rule to avoid duplication
          netsh advfirewall firewall delete rule name="mehraz-Tailscale"

          # Allow incoming RDP connections on port 3389
          netsh advfirewall firewall add rule name="mehraz-Tailscale" `
              dir=in action=allow protocol=TCP localport=3389

          # Restart RDP service to apply changes
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Secure Password
        run: |
          $securePass = ConvertTo-SecureString "mehraz" -AsPlainText -Force
          New-LocalUser -Name "mehraz" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "mehraz"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "mehraz"

          echo "RDP_CREDS=User: mehraz | Password: mehraz" >> $env:GITHUB_ENV

          if (-not (Get-LocalUser -Name "mehraz")) {
              Write-Error "User creation failed"
              exit 1
          }

      - name: Tail
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"

          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale opop
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID

          # Wait for Tailscale to assign an IP
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }

          if (-not $tsIP) {
              Write-Error "Tailscale IP not assigned. Exiting."
              exit 1
          }

          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Verify RDP Accessibilityeyeyyeye
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"

          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "TCP connection to mehraz port 3389 failed"
              exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host "Address: $env:TAILSCALE_IP"
          Write-Host "Username: mehraz"
          Write-Host "Password: mehraz"
          Write-Host "==================`n"

          # Keep the runner active indefinitely
          while ($true) {
              Write-Host "[$(Get-Date)] RDP Active - Use Ctrl+C in workflow to terminate"
              Start-Sleep -Seconds 300
          }
          
